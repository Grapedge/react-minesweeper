{"version":3,"sources":["images/996.png","images/flag.png","constants/game.js","containers/CellRedux.js","containers/MouseRedux.js","containers/GameRedux.js","containers/Cell.js","components/Board.js","containers/Game.js","layouts/App.js","redux/reducers.js","redux/configureStore.js","index.js"],"names":["module","exports","GAME_WIN","coverCell","row","col","type","offsets","bfsCell","r","c","cells","mineCount","length","qs","count","current","v","shift","map","offset","nr","nc","cover","push","cellCheckStart","pre","x","check","cellCheckEnd","cp","flagCnt","flag","cnt","initialState","status","target","config","checkPos","preChecks","remainCell","normalFlag","mineFlag","newGame","Array","fill","seq","_v","i","Math","floor","random","addCellMineCount","checkWin","win","console","log","colorMap","Cell","dispatch","useDispatch","cell","useSelector","state","game","mouse","leftDown","useRef","rightDown","isCheck","onClick","useCallback","onMouseUp","e","checkCellEnd","button","flagCell","onMouseDown","payload","checkCell","useEffect","child","src","boom","alt","className","style","color","cx","Board","useState","setCells","arr","key","u","j","time","alertMap","success","error","info","levelMap","dif","Game","alert","setAlert","level","setLevel","setConfig","customModalVisible","setCustomModalVisible","rowRef","colRef","isCustom","mineCountRef","setGameOption","title","content","setTime","h","localStorage","getItem","setItem","timer","setInterval","clearInterval","header","bordered","dataSource","renderItem","item","Item","Text","strong","message","showIcon","Group","zero","one","two","window","l","visible","onOk","onCancel","min","max","placeholder","defaultValue","onChange","value","App","document","oncontextmenu","combineReducers","action","newState","enhancer","compose","applyMiddleware","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b226ecec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/996.6ffecb69.png\";","module.exports = __webpack_public_path__ + \"static/media/flag.14e34939.png\";","export const GAME_START = 'GAME_START'; // 新游戏\r\nexport const GAME_OVER = 'GAME_OVER'; // 游戏结束\r\nexport const GAME_WIN = 'GAME_WIN'; // 游戏胜利\r\nexport const GAME_IDLE = 'GAME_IDLE'; // 游戏空闲\r\nexport const GAME_END = 'GAME_END'; // 游戏空闲\r\nexport const CELL_NORMAL = 'CELL_NORMAL'; // 普通格子\r\nexport const CELL_MINE = 'CELL_MINE'; // 地雷格子\r\nexport const CELL_COVER = 'CELL_COVER'; // 左键翻开格子\r\nexport const CELL_FLAG = 'CELL_FLAG'; // 右键格子插旗\r\nexport const CELL_CHECK = 'CELL_CHECK'; // 左右键同时按下检查格子周围\r\nexport const CELL_CHECK_END = 'CELL_CHECK_END'; // 左右键同时按下检查格子周围结束\r\nexport const MOUSE_DOWN = 'MOUSE_DOWN'; // 用于修正鼠标右键点击事件\r\nexport const MOUSE_UP = 'MOUSE_UP';\r\n","import {\r\n  CELL_COVER,\r\n  CELL_FLAG,\r\n  CELL_CHECK,\r\n  CELL_CHECK_END\r\n} from 'constants/game';\r\n\r\nexport const coverCell = (row, col) => ({\r\n  type: CELL_COVER,\r\n  row,\r\n  col\r\n});\r\n\r\nexport const flagCell = (row, col) => ({\r\n  type: CELL_FLAG,\r\n  row,\r\n  col\r\n});\r\n\r\nexport const checkCell = (row, col) => ({\r\n  type: CELL_CHECK,\r\n  row,\r\n  col\r\n});\r\n\r\nexport const checkCellEnd = (row, col) => ({\r\n  type: CELL_CHECK_END,\r\n  row,\r\n  col\r\n});\r\n\r\nexport const offsets = [\r\n  [-1, -1],\r\n  [-1, 0],\r\n  [-1, 1],\r\n  [0, -1],\r\n  [0, 1],\r\n  [1, -1],\r\n  [1, 0],\r\n  [1, 1]\r\n];\r\n\r\nexport const bfsCell = (r, c, cells = []) => {\r\n  if (cells[r][c].mineCount !== 0) return 0;\r\n  const row = cells.length;\r\n  const col = (cells[0] && cells[0].length) || 0;\r\n  const qs = [[r, c]];\r\n  const count = { current: 0 };\r\n  while (qs.length > 0) {\r\n    const v = qs.shift();\r\n    offsets.map(offset => {\r\n      const nr = v[0] + offset[0];\r\n      const nc = v[1] + offset[1];\r\n      if (nr >= 0 && nr < row && nc >= 0 && nc < col && !cells[nr][nc].cover) {\r\n        cells[nr][nc].cover = true;\r\n        count.current = count.current + 1;\r\n        if (cells[nr][nc].mineCount === 0) {\r\n          qs.push([nr, nc]);\r\n        }\r\n      }\r\n      return offset;\r\n    });\r\n  }\r\n  return count.current;\r\n};\r\n\r\nexport const cellCheckStart = (r, c, cells) => {\r\n  const row = cells.length;\r\n  const pre = [];\r\n  const col = (cells[0] && cells[0].length) || 0;\r\n  for (let x of offsets) {\r\n    const nr = r + x[0];\r\n    const nc = c + x[1];\r\n    if (nr >= 0 && nr < row && nc >= 0 && nc < col) {\r\n      cells[nr][nc].check = true;\r\n      pre.push([nr, nc]);\r\n    }\r\n  }\r\n  return pre;\r\n};\r\n\r\nexport const cellCheckEnd = (cp, r, c, cells, pre) => {\r\n  if (pre.length === 0) return 0;\r\n  let flagCnt = 0;\r\n  for (let x of pre) {\r\n    flagCnt = cells[x[0]][x[1]].flag ? flagCnt + 1 : flagCnt;\r\n    cells[x[0]][x[1]].check = false;\r\n  }\r\n  let cnt = 0;\r\n  if (cp[0] === r && cp[1] === c) {\r\n    if (flagCnt === cells[r][c].mineCount) {\r\n      pre.map(v => {\r\n        if (!cells[v[0]][v[1]].flag && !cells[v[0]][v[1]].cover) {\r\n          cells[v[0]][v[1]].cover = true;\r\n          cnt++;\r\n        }\r\n        return v;\r\n      });\r\n    }\r\n  }\r\n  return cnt;\r\n};\r\n","import { MOUSE_DOWN, MOUSE_UP } from '../constants/game';\r\n\r\nexport const mouseDonw = target => ({\r\n  type: MOUSE_DOWN,\r\n  payload: target\r\n});\r\n\r\nexport const mouseUp = () => ({\r\n  type: MOUSE_UP\r\n});\r\n\r\nconst initialState = {\r\n  status: MOUSE_UP,\r\n  target: null\r\n};\r\n\r\nexport default function mouseReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOUSE_DOWN:\r\n      return {\r\n        ...state,\r\n        type: MOUSE_DOWN,\r\n        target: action.payload\r\n      };\r\n    case MOUSE_UP:\r\n      return {\r\n        ...state,\r\n        type: MOUSE_UP,\r\n        target: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GAME_IDLE,\r\n  GAME_OVER,\r\n  GAME_WIN,\r\n  CELL_NORMAL,\r\n  CELL_MINE,\r\n  GAME_START\r\n} from 'constants/game';\r\nimport {\r\n  CELL_COVER,\r\n  CELL_FLAG,\r\n  CELL_CHECK,\r\n  CELL_CHECK_END\r\n} from '../constants/game';\r\nimport { offsets, bfsCell, cellCheckStart, cellCheckEnd } from './CellRedux';\r\n\r\nconst initialState = {\r\n  status: GAME_IDLE, // 游戏状态\r\n  config: {\r\n    row: 0, // 行数\r\n    col: 0, // 列数\r\n    mineCount: 0 // 地雷数\r\n  }, // 游戏配置\r\n  cells: [[]], // 游戏网格\r\n  checkPos: [], // 检查位置\r\n  preChecks: [], // 检查状态的周围格子\r\n  remainCell: 0, // 剩余没点开的格子数\r\n  normalFlag: 0, // 当前已经插的旗子并且插在地雷位置上\r\n  mineFlag: 0 //  当前插的旗子总数\r\n};\r\n\r\n/**\r\n * 创建新游戏\r\n * @param {*} row 行数\r\n * @param {*} col 列数\r\n * @param {*} mineCount 地雷数\r\n */\r\nexport const newGame = (row, col, mineCount) => {\r\n  // 创建棋盘\r\n  const cells = new Array(row).fill(0).map(() =>\r\n    new Array(col).fill(0).map(() => ({\r\n      type: CELL_NORMAL,\r\n      flag: false, // 是否插旗\r\n      mineCount: 0, // 周围八格地雷数\r\n      cover: false, // 是否被翻开\r\n      check: false\r\n    }))\r\n  );\r\n  // 生成地雷：洗牌算法\r\n  const seq = new Array(row * col).fill(0).map((_v, i) => i);\r\n  for (let i = seq.length - 1; i > 0; --i) {\r\n    const r = Math.floor(Math.random() * i);\r\n    [seq[i], seq[r]] = [seq[r], seq[i]];\r\n  }\r\n  const addCellMineCount = (r, c) => {\r\n    if (r >= 0 && r < row && c >= 0 && c < col) {\r\n      ++cells[r][c].mineCount;\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < mineCount; ++i) {\r\n    const r = Math.floor(seq[i] / col);\r\n    const c = Math.floor(seq[i] % col);\r\n    cells[r][c].type = CELL_MINE;\r\n    offsets.map(offset => {\r\n      addCellMineCount(r + offset[0], c + offset[1]);\r\n      return offset;\r\n    });\r\n  }\r\n  // 返回 action\r\n  return {\r\n    type: GAME_IDLE,\r\n    row,\r\n    col,\r\n    cells,\r\n    mineCount\r\n  };\r\n};\r\n\r\nexport const gameOver = () => ({\r\n  type: GAME_OVER\r\n});\r\n\r\nexport const gameStart = () => ({\r\n  type: GAME_START\r\n});\r\n\r\nconst checkWin = ({\r\n  status,\r\n  normalFlag,\r\n  mineFlag,\r\n  remainCell,\r\n  config: { mineCount }\r\n}) => {\r\n  const win =\r\n    status !== GAME_OVER &&\r\n    ((normalFlag === mineFlag && mineFlag === mineCount) ||\r\n      remainCell === mineCount);\r\n  if (win) {\r\n    console.log('WIN');\r\n  }\r\n  return win;\r\n};\r\n\r\n// Reducer\r\nexport default function gameReducer(state = initialState, action) {\r\n  if (state.status === GAME_WIN && action.type !== GAME_IDLE) return state;\r\n  const cells = [];\r\n  const win = { current: false };\r\n  const preChecks = { current: [] };\r\n  const count = { current: 0 };\r\n  const remainCell = { current: 0 };\r\n  const newState = { current: {} };\r\n  switch (action.type) {\r\n    case GAME_IDLE:\r\n      return {\r\n        ...state,\r\n        status: GAME_IDLE,\r\n        config: {\r\n          row: action.row,\r\n          col: action.col,\r\n          mineCount: action.mineCount\r\n        },\r\n        cells: action.cells,\r\n        remainCell: action.row * action.col,\r\n        mineFlag: 0,\r\n        normalFlag: 0,\r\n        preChecks: []\r\n      };\r\n    case GAME_OVER:\r\n      return {\r\n        ...state,\r\n        status: GAME_OVER\r\n      };\r\n    case GAME_START:\r\n      return {\r\n        ...state,\r\n        status: GAME_START\r\n      };\r\n    case GAME_WIN:\r\n      return {\r\n        ...state,\r\n        status: GAME_WIN\r\n      };\r\n\r\n    // 打开格子\r\n    case CELL_COVER:\r\n      cells.current = [...state.cells];\r\n      cells.current[action.row][action.col].cover = true;\r\n      count.current =\r\n        cells.current[action.row][action.col].type === CELL_NORMAL ? 1 : 0;\r\n      if (cells.current[action.row][action.col].type === CELL_NORMAL)\r\n        count.current += bfsCell(action.row, action.col, cells.current);\r\n      remainCell.current = state.remainCell - count.current;\r\n      newState.current = {\r\n        ...state,\r\n        cells: cells.current,\r\n        remainCell: remainCell.current\r\n      };\r\n      win.current = checkWin(newState.current);\r\n      return {\r\n        ...newState.current,\r\n        status: win.current ? GAME_WIN : state.status\r\n      };\r\n    // 插旗子\r\n    case CELL_FLAG:\r\n      cells.current = [...state.cells];\r\n      cells.current[action.row][action.col].flag = !cells.current[action.row][\r\n        action.col\r\n      ].flag;\r\n      const flag = cells.current[action.row][action.col].flag;\r\n      count.current = state.mineFlag;\r\n      if (flag && cells.current[action.row][action.col].type === CELL_MINE) {\r\n        ++count.current;\r\n      } else if (\r\n        !flag &&\r\n        cells.current[action.row][action.col].type === CELL_MINE\r\n      ) {\r\n        --count.current;\r\n      }\r\n\r\n      const mineFlag = count.current;\r\n      const normalFlag =\r\n        state.normalFlag +\r\n        (cells.current[action.row][action.col].flag ? 1 : -1);\r\n      newState.current = {\r\n        ...state,\r\n        cells: cells.current,\r\n        mineFlag,\r\n        normalFlag\r\n      };\r\n      win.current = checkWin(newState.current);\r\n      return {\r\n        ...newState.current,\r\n        status: win.current ? GAME_WIN : state.status\r\n      };\r\n    // 检查周围格子\r\n    case CELL_CHECK:\r\n      cells.current = [...state.cells];\r\n      const checkPos = [action.row, action.col];\r\n      preChecks.current = cellCheckStart(\r\n        checkPos[0],\r\n        checkPos[1],\r\n        cells.current\r\n      );\r\n      return {\r\n        ...state,\r\n        cells: cells.current,\r\n        preChecks: preChecks.current,\r\n        checkPos\r\n      };\r\n    case CELL_CHECK_END: {\r\n      cells.current = [...state.cells];\r\n      count.current = 0;\r\n\r\n      count.current = cellCheckEnd(\r\n        state.checkPos,\r\n        action.row,\r\n        action.col,\r\n        cells.current,\r\n        state.preChecks\r\n      );\r\n      remainCell.current = state.remainCell - count.current;\r\n      newState.current = {\r\n        ...state,\r\n        checkPos: [],\r\n        preChecks: [],\r\n        remainCell: remainCell.current\r\n      };\r\n      win.current = checkWin(newState.current);\r\n      return {\r\n        ...newState.current,\r\n        status: win.current ? GAME_WIN : state.status\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useRef, useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { coverCell, flagCell, checkCell, checkCellEnd } from './CellRedux';\r\nimport { CELL_MINE, GAME_OVER, GAME_IDLE } from '../constants/game';\r\nimport cx from 'classnames';\r\nimport { mouseDonw } from './MouseRedux';\r\nimport { gameOver, gameStart } from './GameRedux';\r\nimport boom from 'images/996.png';\r\nimport flag from 'images/flag.png';\r\n\r\nconst colorMap = [\r\n  '',\r\n  '#3F51B5',\r\n  '#009688',\r\n  '#E91E63',\r\n  '#BA4A00',\r\n  '#F4D03F',\r\n  '#8E44AD',\r\n  '#48C9B0',\r\n  '#CD6155',\r\n  '#558B2F'\r\n];\r\nexport default function Cell({ row, col }) {\r\n  const dispatch = useDispatch();\r\n  const cell = useSelector(state => state.game.cells[row][col]);\r\n  const status = useSelector(state => state.game.status);\r\n  const mouse = useSelector(state => state.mouse);\r\n  const leftDown = useRef(false);\r\n  const rightDown = useRef(false);\r\n  const isCheck = useRef(false);\r\n  // 翻开-Click事件\r\n  const onClick = useCallback(() => {\r\n    if (status === GAME_OVER) return;\r\n    if (isCheck.current) {\r\n      isCheck.current = false;\r\n      return;\r\n    }\r\n    if (!cell.cover && !cell.flag) {\r\n      if (status === GAME_IDLE) dispatch(gameStart());\r\n      dispatch(coverCell(row, col));\r\n    }\r\n  }, [cell.cover, cell.flag, col, dispatch, row, status]);\r\n  // 插旗-MOUSE_UP\r\n  const onMouseUp = useCallback(\r\n    e => {\r\n      if (status === GAME_OVER) return;\r\n      leftDown.current = rightDown.current = false;\r\n      dispatch(checkCellEnd(row, col));\r\n\r\n      if (isCheck.current) {\r\n        isCheck.current = false;\r\n        return;\r\n      }\r\n      if (e.button === 2 && mouse.target === e.target && !cell.cover) {\r\n        console.log('作弊模式：', cell.type === CELL_MINE ? '地雷' : '普通');\r\n        dispatch(flagCell(row, col));\r\n      }\r\n    },\r\n    [cell.cover, cell.type, col, dispatch, mouse.target, row, status]\r\n  );\r\n\r\n  const onMouseDown = useCallback(\r\n    e => {\r\n      if (status === GAME_OVER) return;\r\n      dispatch(mouseDonw(e.target));\r\n      if (e.button === 0) leftDown.current = true;\r\n      else if (e.button === 2) rightDown.current = true;\r\n      if (cell.cover && leftDown.current && rightDown.current) {\r\n        isCheck.current = true;\r\n        dispatch(checkCell(row, col));\r\n      }\r\n    },\r\n    [cell.cover, col, dispatch, row, status]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (status === GAME_OVER && cell.type === CELL_MINE) {\r\n      dispatch(coverCell(row, col));\r\n    }\r\n  }, [cell, col, dispatch, row, status]);\r\n\r\n  useEffect(() => {\r\n    if (cell.cover && cell.type === CELL_MINE) {\r\n      dispatch(gameOver());\r\n    }\r\n  }, [cell.cover, cell.type, dispatch]);\r\n  let child = null;\r\n  if (cell.cover) {\r\n    if (cell.type === CELL_MINE)\r\n      child = <img src={boom} alt=\"*\" className=\"cell-cnt\" />;\r\n    else if (cell.mineCount > 0)\r\n      child = (\r\n        <span\r\n          style={{\r\n            color: colorMap[cell.mineCount]\r\n          }}\r\n        >\r\n          {cell.mineCount}\r\n        </span>\r\n      );\r\n    else if (cell.mineCount === 0) child = ' ';\r\n  } else if (cell.flag) child = <img src={flag} alt=\"F\" className=\"cell-cnt\" />;\r\n  return (\r\n    <div\r\n      className={cx('cell', {\r\n        'cell-cover': cell.cover,\r\n        'cell-check': cell.check\r\n      })}\r\n      onClick={onClick}\r\n      onMouseDown={onMouseDown}\r\n      onMouseUp={onMouseUp}\r\n    >\r\n      {child}\r\n    </div>\r\n  );\r\n}\r\n\r\nCell.propTypes = {\r\n  row: PropTypes.number.isRequired,\r\n  col: PropTypes.number.isRequired\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Cell from 'containers/Cell';\r\nexport default function Board({ row, col }) {\r\n  const [cells, setCells] = useState([[]]);\r\n  useEffect(() => {\r\n    // 创建对应大小的二维数组\r\n    const arr = new Array(row)\r\n      .fill(0)\r\n      .map(() => new Array(col).fill(0).map((_v, i) => i));\r\n    setCells(arr);\r\n    return () => {\r\n      setCells(null);\r\n    };\r\n  }, [col, row]);\r\n  return cells.map((_v, i) => (\r\n    <div className=\"row\" key={i}>\r\n      {cells[i].map((u, j) => {\r\n        return (\r\n          i < row &&\r\n          j < col && (\r\n            <Cell key={j} row={i} col={j}>\r\n              ss\r\n            </Cell>\r\n          )\r\n        );\r\n      })}\r\n    </div>\r\n  ));\r\n}\r\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport Board from 'components/Board';\r\nimport {\r\n  Button,\r\n  Alert,\r\n  List,\r\n  Typography,\r\n  Modal,\r\n  InputNumber,\r\n  message\r\n} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { newGame } from './GameRedux';\r\nimport { GAME_START, GAME_OVER, GAME_WIN } from 'constants/game';\r\nlet time = 0;\r\n\r\nconst alertMap = {\r\n  success: '恭喜，游戏胜利',\r\n  error: '游戏结束',\r\n  info: '游戏中...'\r\n};\r\n\r\nconst levelMap = [\r\n  {\r\n    dif: '初级',\r\n    row: 10,\r\n    col: 10,\r\n    mineCount: 10\r\n  },\r\n  {\r\n    dif: '中级',\r\n    row: 16,\r\n    col: 16,\r\n    mineCount: 40\r\n  },\r\n  {\r\n    dif: '高级',\r\n    row: 16,\r\n    col: 30,\r\n    mineCount: 99\r\n  }\r\n];\r\nexport default function Game() {\r\n  const dispatch = useDispatch();\r\n  const game = useSelector(state => state.game);\r\n  const [alert, setAlert] = useState('info');\r\n  const [level, setLevel] = useState(0);\r\n  const [config, setConfig] = useState([]);\r\n  const [customModalVisible, setCustomModalVisible] = useState(false);\r\n  const rowRef = useRef(10);\r\n  const colRef = useRef(10);\r\n  const isCustom = useRef(false);\r\n  const mineCountRef = useRef(10);\r\n  useEffect(() => {\r\n    dispatch(newGame(10, 10, 10));\r\n  }, [dispatch]);\r\n  const { row, col } = game.config;\r\n  const setGameOption = useCallback(({ dif, row, col, mineCount }) => {\r\n    const option = [\r\n      {\r\n        title: '难度',\r\n        content: dif\r\n      },\r\n      {\r\n        title: '行数',\r\n        content: row\r\n      },\r\n      {\r\n        title: '列数',\r\n        content: col\r\n      },\r\n      {\r\n        title: '地雷',\r\n        content: mineCount\r\n      },\r\n      {\r\n        title: '时间',\r\n        content: '0S'\r\n      }\r\n    ];\r\n    setConfig(option);\r\n  }, []);\r\n  const setTime = useCallback(time => {\r\n    setConfig(state => {\r\n      const arr = [...state];\r\n      arr[4].content = time + 'S';\r\n      return arr;\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setGameOption({ dif: '初级', row: 10, mineCount: 10, col: 10 });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (game.status === GAME_WIN) {\r\n      if (!isCustom.current) {\r\n        const h = localStorage.getItem(level);\r\n        if (!h || (h && h >= time)) {\r\n          localStorage.setItem(level, time);\r\n        }\r\n      }\r\n      isCustom.current = false;\r\n      setAlert('success');\r\n    } else if (game.status === GAME_OVER) {\r\n      setAlert('error');\r\n    } else setAlert('info');\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [game.status]);\r\n\r\n  useEffect(() => {\r\n    let timer = null;\r\n    if (game.status === GAME_START) {\r\n      time = 0;\r\n      timer = (() => {\r\n        return setInterval(() => {\r\n          setTime(++time);\r\n        }, 1000);\r\n      })();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [game.status, setTime]);\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className=\"cntr\">\r\n        <div className=\"game-control\">\r\n          <List\r\n            header={<div>游戏信息</div>}\r\n            bordered\r\n            dataSource={config}\r\n            renderItem={item => (\r\n              <List.Item>\r\n                {item.title}：\r\n                <Typography.Text strong>{item.content}</Typography.Text>\r\n              </List.Item>\r\n            )}\r\n          />\r\n          <Alert message={alertMap[alert]} type={alert} showIcon />\r\n          <Button.Group>\r\n            <Button type=\"primary\" onClick={() => setCustomModalVisible(true)}>\r\n              自定义\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                const zero = localStorage.getItem(0);\r\n                const one = localStorage.getItem(1);\r\n                const two = localStorage.getItem(2);\r\n                window.alert(\r\n                  `【初级】${zero ? zero : 999}S\\n【中级】${\r\n                    one ? one : 999\r\n                  }S\\n【高级】${two ? two : 999}S`\r\n                );\r\n              }}\r\n            >\r\n              排行榜\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                const l = Math.floor((level + 1) % levelMap.length);\r\n                setLevel(l);\r\n                setGameOption(levelMap[l]);\r\n              }}\r\n            >\r\n              难度\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                dispatch(\r\n                  newGame(\r\n                    levelMap[level].row,\r\n                    levelMap[level].col,\r\n                    levelMap[level].mineCount\r\n                  )\r\n                );\r\n              }}\r\n            >\r\n              新游戏\r\n            </Button>\r\n          </Button.Group>\r\n        </div>\r\n        <div>\r\n          <Board row={row} col={col} />\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        title=\"自定义游戏\"\r\n        visible={customModalVisible}\r\n        onOk={() => {\r\n          if (mineCountRef.current >= rowRef.current * colRef.current) {\r\n            message.error('地雷数应小于总格数');\r\n          } else {\r\n            dispatch(\r\n              newGame(rowRef.current, colRef.current, mineCountRef.current)\r\n            );\r\n            isCustom.current = true;\r\n            setCustomModalVisible(false);\r\n          }\r\n        }}\r\n        onCancel={() => setCustomModalVisible(false)}\r\n      >\r\n        <InputNumber\r\n          min={1}\r\n          max={30}\r\n          placeholder=\"行数\"\r\n          defaultValue={10}\r\n          onChange={value => (rowRef.current = value)}\r\n        />\r\n        <InputNumber\r\n          min={1}\r\n          max={30}\r\n          placeholder=\"列数\"\r\n          defaultValue={10}\r\n          onChange={value => (colRef.current = value)}\r\n        />\r\n        <InputNumber\r\n          min={1}\r\n          max={900}\r\n          placeholder=\"地雷数\"\r\n          defaultValue={10}\r\n          onChange={value => (mineCountRef.current = value)}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\nimport './styles/App.scss';\nimport Game from 'containers/Game';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  useEffect(() => {\n    document.oncontextmenu = () => false;\n    return () => {\n      document.oncontextmenu = null;\n    };\n  }, []);\n  return <Game />;\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport game from 'containers/GameRedux';\r\nimport mouse from 'containers/MouseRedux';\r\n\r\nexport default combineReducers({\r\n  game,\r\n  mouse\r\n});\r\n","import rootReducer from './reducers';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nconst middlewares = [];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  //middlewares.push(require('redux-logger').createLogger());\r\n}\r\n\r\nconst enhancer = compose(applyMiddleware(...middlewares));\r\n\r\nexport function configureStore() {\r\n  const store = createStore(rootReducer, enhancer);\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'layouts/App';\nimport { Provider } from 'react-redux';\nimport store from 'redux/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}